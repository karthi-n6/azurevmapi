name: AI Terraform Bot

on:
  issue_comment:
    types: [created]

jobs:
  ai:
    if: contains(github.event.comment.body, '/create-vm')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3 python3-pip
          pip3 install openai

      - name: Parse comment
        id: parse
        run: |
          echo "USER_INPUT=${GITHUB_EVENT_COMMENT_BODY}" >> $GITHUB_ENV

      - name: Generate Terraform code with AI
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          USER_INPUT: ${{ env.USER_INPUT }}
        run: |
          python3 << 'EOF'
          import openai, os

          openai.api_key = os.getenv("OPENAI_API_KEY")
          user_input = os.getenv("USER_INPUT")

          # Example comment: /create-vm ubuntu 22.04 Standard_B1s
          prompt = f"""
          The user requested: {user_input}
          Write Terraform code that adds a new Azure Ubuntu VM.
          Requirements:
          - Resource group: rg-ubuntu-vm
          - Use azurerm_linux_virtual_machine
          - Default to ubuntu 20.04 if version not specified
          - Default VM size: Standard_B1s if not specified
          """

          response = openai.ChatCompletion.create(
              model="gpt-4o-mini",   # or your Azure OpenAI deployment
              messages=[{"role": "user", "content": prompt}],
              temperature=0.2
          )

          code = response["choices"][0]["message"]["content"]

          with open("vm.tf", "w") as f:
              f.write(code)

          print("âœ… Terraform code generated in vm.tf")
          EOF

      - name: Commit changes
        run: |
          git config --global user.name "ai-bot"
          git config --global user.email "ai-bot@github.com"
          git add vm.tf
          git commit -m "AI Bot: Add VM from issue comment"
          git push
